diff --git a/general/performance/Grid5k.tla b/general/performance/Grid5k.tla
deleted file mode 100644
index 64be331..0000000
--- a/general/performance/Grid5k.tla
+++ /dev/null
@@ -1,29 +0,0 @@
--------------------------------- MODULE Grid5k --------------------------------
-\* This spec executes
-\*  variable x = [i \in 1..N |-> 0];
-\*  while (TRUE) {
-\*    with (i \in 1..N) {
-\*        x[i] := (x[i] + 1) % K ;
-\*        await SUBSET 1..L \subseteq SUBSET 1..L
-\*        }
-\*   }
-\*  Thus,  - N is the number of states computed for each evaluation of the
-\*           next-state action
-\*         - K^N is the total number of distinct states
-\*         - The time to compute a single state is asymptotically
-\*           proportional to 2^L
-\*         - C defines the number of initial states. Let C=n
-\*           then the state graph has n isomorphic disjunct subgraphs.
-EXTENDS Integers, FiniteSets
-
-CONSTANTS N, K, L, C
-VARIABLE x, y
-
-Init == /\ x = [i \in 1..N |-> 0]
-        /\ y \in 1..C
-
-Next == /\ UNCHANGED y
-        /\ \E i \in 1..N : /\ x' = [x EXCEPT ![i] = (@ + 1) % K]
-                  /\ SUBSET (1..L) \subseteq SUBSET (1..L)
-
-=============================================================================
diff --git a/general/performance/csv.sh b/general/performance/csv.sh
index 8629d95..4b00adb 100755
--- a/general/performance/csv.sh
+++ b/general/performance/csv.sh
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-echo "Implementation,Processors,Insertions,Duration,Memory,LoadFactor,Locks,TblCnt,JunitTime,NUMABalancing,PageDefrag,Govenor"
+echo "Implementation,Processors,Insertions,Duration,Memory,LoadFactor,Locks,TblCnt,JunitTime,NUMABalancing,PageDefrag,Govenor,Inst"
 
 for file in $1/*-tlc.txt; do
    PROCESSORS=$(echo $file | cut -d "-" -f3)
@@ -17,6 +17,9 @@ for file in $1/*-tlc.txt; do
    NUMA=$(echo $FILE | grep -Po 'kernel.numa_balancing = \K[0-9,.]*')
    DEFRAG=$(echo $FILE | grep 'page_defrag = ' | grep -Po '\[.*\]')
    GOVENOR=$(echo $FILE | grep -Po 'scaling_governor = \K[a-z]*')
+   TEST=$(echo $FILE | grep -Po 'Running test: \K[a-zA-Z]*')
+   INST=$(echo $FILE | grep -Po 'Insertions: \K[0-9,]+' | uniq | sed 's/,//g')
 
-   echo $IMPL,$PROCESSORS,$INSERTIONS,$DURATION,$(echo $MEM | sed s/,//g),$LOADFACTOR,$LOCKS,$TBLCNT,$(echo $JUNITTIME | sed s/,//g),$NUMA,$DEFRAG,$GOVENOR
+   echo $IMPL,$PROCESSORS,$INSERTIONS,$DURATION,$(echo $MEM | sed s/,//g),$LOADFACTOR,$LOCKS,$TBLCNT,$(echo $JUNITTIME | sed s/,//g),$NUMA,$DEFRAG,$GOVENOR,$TEST,$INST
 done
+
diff --git a/general/performance/measure.sh b/general/performance/measure.sh
deleted file mode 100644
index c2c1b9c..0000000
--- a/general/performance/measure.sh
+++ /dev/null
@@ -1,72 +0,0 @@
-#!/bin/bash
-
-SPEC="Grid5k"
-
-# Check Grid5k.tla for semantical meaning
-K=${1-"04"}
-L=${2-"01"}
-N=${3-"10"}
-C=${4-"04"}
-MODEL='k'$K'_l'$L'_n'$N'_c'$C
-
-# Performance related properties
-WORKERS=${5-"$(nproc --all)"}
-HEAP_MEM=${6-"128G"}
-DIRECT_MEM=${7-"128g"}
-FPSET_IMPL="tlc2.tool.fp.OffHeapDiskFPSet"
-
-# TLC version
-REV=$(git rev-parse HEAD)
-
-# measure.sh's fs path
-#DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
-
-# TLC's code location
-TLATOOLS_HOME=../../tlatools/
-
-# Trap interrupts and exit instead of continuing the for loop below
-trap "echo Exited!; exit;" SIGINT SIGTERM
-
-######################################
-
-# Generate TLC's config on-the-fly
-cat > $MODEL.cfg <<EOF
-CONSTANT K = $K
-CONSTANT L = $L
-CONSTANT N = $N
-CONSTANT C = $C
-INIT Init
-NEXT Next
-EOF
-
-# Repeat N times to even out noise...
-for i in {1..3}; do
-        # For varying worker (core) counts...
-        for ((w=$WORKERS; w > 0;w=w/2)); do
-
-          # Output/log files
-          JFR_OUTPUT_FILE=$REV'_w'$w'_i'$i.jfr
-          TIME_OUTPUT_FILE=$REV-$w.txt
-          TLC_OUTPUT_FILE=$REV-$i-$w-tlc.txt
-
-          /usr/bin/time --append --output=$TIME_OUTPUT_FILE \
-          java -XX:+UnlockCommercialFeatures \
-           -XX:+FlightRecorder \
-           -XX:FlightRecorderOptions=defaultrecording=true,disk=true,repository=/tmp,dumponexit=true,dumponexitpath=$JFR_OUTPUT_FILE,maxage=12h,settings=$TLATOOLS_HOME/jfr/tlc.jfc \
-           -javaagent:$TLATOOLS_HOME/jfr/jmx2jfr.jar=$TLATOOLS_HOME/jfr/jmxprobes.xml \
-           -Xmx$HEAP_MEM -Xms$HEAP_MEM \
-           -XX:MaxDirectMemorySize=$DIRECT_MEM \
-           -Dtlc2.tool.fp.FPSet.impl=$FPSET_IMPL \
-           -cp $TLATOOLS_HOME/class:$TLATOOLS_HOME/lib/* \
-           -DspecName=$SPEC \
-           -DmodelName=$MODEL \
-           tlc2.TLC -deadlock -checkpoint 99999 -workers $w -config $MODEL $SPEC 2>&1 | tee $TLC_OUTPUT_FILE;
-          # newer TLC versions support "-checkpoint 0", but 99999 suffices.
-
-          # cleanup left-over states/ directory to free disk space
-          rm -rf states/
-
-          # Notify user of completion
-          cat $TLC_OUTPUT_FILE | mail -s "Model: $MODEL Workers: $w" $(id -u -n)
-        done
-done
diff --git a/general/performance/measureFPSet.sh b/general/performance/measureFPSet.sh
index 908efd8..bea6fdf 100755
--- a/general/performance/measureFPSet.sh
+++ b/general/performance/measureFPSet.sh
@@ -3,7 +3,7 @@
 # Performance related properties
 WORKERS=${5-"$(nproc --all)"}
 HEAP_MEM=${6-"512g"}
-DIRECT_MEM=${7-"512g"}
+DIRECT_MEM=${7-"50g"}
 FPSET_IMPL="tlc2.tool.fp.OffHeapDiskFPSet"
 
 # TLC version
@@ -21,37 +21,18 @@ trap "echo Exited!; exit;" SIGINT SIGTERM
 ######################################
 
 # Repeat N times to even out noise...
-for i in {1..3}; do
+for i in {8..10}; do
         # For varying worker (core) counts...
         #for ((w=$WORKERS; w > 0;w=w/2)); do
         #for w in 128 120 112 104 96 88 80 72 64 56 48 40 32 24 16 8 4 2 1; do
-        for w in 128 64 32 16 8 4 2 1 24 40 48 56 82 80 88 96 104; do
-
-          ## MSB Output/log files
-          MSB_JFR_OUTPUT_FILE="MSB_"$REV'_w'$(printf "%03d" $w)'_i'$i.jfr
-          MSB_TIME_OUTPUT_FILE="MSB_"$REV-$(printf "%03d" $w).txt
-          MSB_TLC_OUTPUT_FILE="MSB_"$REV-$i-$(printf "%03d" $w)-tlc.txt
-
-          /usr/bin/time --append --output=$MSB_TIME_OUTPUT_FILE \
-          java \
-           -XX:+UnlockCommercialFeatures \
-           -XX:+UnlockDiagnosticVMOptions \
-           -XX:+DebugNonSafepoints \
-           -XX:+FlightRecorder \
-           -XX:FlightRecorderOptions=defaultrecording=true,disk=true,repository=/tmp,dumponexit=true,dumponexitpath=$MSB_JFR_OUTPUT_FILE,maxage=12h,settings=$TLATOOLS_HOME/jfr/tlc.jfc \
-           -javaagent:$TLATOOLS_HOME/jfr/jmx2jfr.jar=$TLATOOLS_HOME/jfr/jmxprobes.xml \
-           -Xmx$HEAP_MEM -Xms$HEAP_MEM \
-           -Dtlc2.tool.fp.MultiThreadedFPSetTest.numThreads=$w \
-           -Dtlc2.tool.fp.MultiThreadedFPSetTest.excludes=_BatchedFingerPrintGenerator_LongVecFingerPrintGenerator_PartitionedFingerPrintGenerator \
-           -Dtlc2.tool.fp.MultiThreadedFPSetTest.insertions=8589934592 \
-           -Djava.io.tmpdir=/mnt/markus/tmp/ \
-           -cp $TLATOOLS_HOME/class:$TLATOOLS_HOME/lib/* \
-           org.junit.runner.JUnitCore tlc2.tool.fp.MultiThreadedMSBDiskFPSetTest 2>&1 | tee $MSB_TLC_OUTPUT_FILE;
+        w=32
+        for ins in 6979321856; do
+#        for ins in 536870912 671088640 805306368 939524096 1073741824 1610612736 2147483648 3221225472 3758096384 4294967296 5368709120 5905580032 6174015488 6442450944; do
 
           ## OffHeap
-          JFR_OUTPUT_FILE="Off_"$REV'_w'$(printf "%03d" $w)'_i'$i.jfr
-          TIME_OUTPUT_FILE="Off_"$REV-$(printf "%03d" $w).txt
-          TLC_OUTPUT_FILE="Off_"$REV-$i-$(printf "%03d" $w)-tlc.txt
+          JFR_OUTPUT_FILE="Off_"$REV'_w'$(printf "%03d" $w)-$ins'_i'$i.jfr
+          TIME_OUTPUT_FILE="Off_"$REV-$(printf "%03d" $w)-$ins.txt
+          TLC_OUTPUT_FILE="Off_"$REV-$i-$(printf "%03d" $w)-$ins-tlc.txt
 
           /usr/bin/time --append --output=$TIME_OUTPUT_FILE \
           java \
@@ -64,7 +45,7 @@ for i in {1..3}; do
            -XX:MaxDirectMemorySize=$DIRECT_MEM \
            -Dtlc2.tool.fp.MultiThreadedFPSetTest.numThreads=$w \
            -Dtlc2.tool.fp.MultiThreadedFPSetTest.excludes=_BatchedFingerPrintGenerator_LongVecFingerPrintGenerator_PartitionedFingerPrintGenerator \
-           -Dtlc2.tool.fp.MultiThreadedFPSetTest.insertions=34359738368 \
+           -Dtlc2.tool.fp.MultiThreadedFPSetTest.insertions=$ins \
            -Djava.io.tmpdir=/mnt/markus/tmp/ \
            -cp $TLATOOLS_HOME/class:$TLATOOLS_HOME/lib/* \
            org.junit.runner.JUnitCore tlc2.tool.fp.MultiThreadedOffHeapDiskFPSetTest 2>&1 | tee $TLC_OUTPUT_FILE;
diff --git a/tlatools/src/tlc2/tool/fp/OffHeapDiskFPSet.java b/tlatools/src/tlc2/tool/fp/OffHeapDiskFPSet.java
index dd97f18..a5c55f0 100644
--- a/tlatools/src/tlc2/tool/fp/OffHeapDiskFPSet.java
+++ b/tlatools/src/tlc2/tool/fp/OffHeapDiskFPSet.java
@@ -36,7 +36,7 @@ import util.Assert;
 @SuppressWarnings({ "serial" })
 public final class OffHeapDiskFPSet extends NonCheckpointableDiskFPSet implements FPSetStatistic {
 	
-	private static final int PROBE_LIMIT = Integer.getInteger(OffHeapDiskFPSet.class.getName() + ".probeLimit", 128);
+	private static final int PROBE_LIMIT = Integer.getInteger(OffHeapDiskFPSet.class.getName() + ".probeLimit", Integer.MAX_VALUE);
 	static final long EMPTY = 0L;
 	
 	private final LongAccumulator reprobe;
diff --git a/tlatools/test-concurrent/tlc2/tool/fp/MultiThreadedFPSetTest.java b/tlatools/test-concurrent/tlc2/tool/fp/MultiThreadedFPSetTest.java
index 3ae835c..140dd47 100644
--- a/tlatools/test-concurrent/tlc2/tool/fp/MultiThreadedFPSetTest.java
+++ b/tlatools/test-concurrent/tlc2/tool/fp/MultiThreadedFPSetTest.java
@@ -173,7 +173,6 @@ public abstract class MultiThreadedFPSetTest extends AbstractFPSetTest {
 		
 		// Check a DiskFPSet's invariant that after flush all fingerprints in
 		// the file are a) monotonically increasing and b) there are no duplicates.
-		assertTrue(fpSet.checkInvariant());
 		
 		return fpSet;
 	}
diff --git a/tlatools/test-concurrent/tlc2/tool/fp/generator/FingerPrintGenerator.java b/tlatools/test-concurrent/tlc2/tool/fp/generator/FingerPrintGenerator.java
index aa0db19..44a282e 100644
--- a/tlatools/test-concurrent/tlc2/tool/fp/generator/FingerPrintGenerator.java
+++ b/tlatools/test-concurrent/tlc2/tool/fp/generator/FingerPrintGenerator.java
@@ -53,10 +53,6 @@ public class FingerPrintGenerator implements Runnable {
 		// down execution.
 		while (puts + collisions < perThreadInsertions || fpSet.size() < totalInsertions) {
 			try {
-				// make sure set still contains predecessor
-				if (predecessor != 0L) {
-					Assert.assertTrue(fpSet.contains(predecessor));
-				}
 
 				predecessor = rnd.nextLong();
 
